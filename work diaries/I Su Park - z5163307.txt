Week 1
- formed group and decided roles and rough technology stack for the project
- created Jira accounts
- discussed and decided on candidate projects (InvestmentSimulator and OnlinePropertySales)
- after further research, we settled on InvestmentSimulator project
- looked into various sources of API for stock data, and found finnhub.io to be the best
- plan for next week: to research existing systems to gain ideas for new features, UI and extension

Week 2
- joined the team on GitHub
- suggested (and group agreed) to have scrum "meeting" everyday, i.e. everyone posts their answer to three questions: 
  "what have you done yesterday?", "do you have any blockers?", and "what are you doing today?"
- researched existing systems, studied about basic stock trading
- came up with extension ideas: gamifying the app (e.g. achievements, levelling up, and unlocking features as you level up)
- as a group, we refined and decided on the gamification idea
- plan for next week: finish user stories, sprint planning, set up a table for weekly retrospectives

Week 3
- planned last week: finish user stories, sprint planning, set up a table for weekly retrospectives
- all of the above plans have been completed
- for user stories, I worked on refining those written by George, added more stories (especially those for extensions)
and broke apart those that were too big in size
- I detailed the AC for the user stories, especially the mathematical formulas
- I got together with my team in my garage, and worked on further refining the proposal (background research, sprint dates
  user stories, and proofreading other parts done by my group mates)
- I planned and created the first sprint with Even (Pei Yu)
- problem 1: there were issues with images in our proposal document becoming pixelated when converted to PDF, we tried
several options by searching for help online, and we ended up improving the result a little by using Adobe cloud converter
along with various MS Word settings
- problem 2: the lecturer disapproved demoing at 5:30am, so we had to search for data source that provides market data for
stocks that are traded at our demo time. After 4 hours of scavenging for such APIs (and preferably free/cheap), I found
'twelvedata' (https://twelvedata.com/) that provides ASX market data with 25 USD/month plan. I emailed the customer support
and managed to get a student discount, down to 20 USD/month.
- plan for next week: I aim to implement websocket for streaming real-time market data from our backend to the frontend,
and help Even with setting up a MySQL database


Week 4
- planned last week: implementing websocket for streaming real-time market data, helping Even with setting up a MySQL database
- after more research into the two things above, there were various changes in the plan
- we decided not to stream real-time market data from backend to frontend using websockets due to the complexities and issues
surrounding syncing data across the screen (e.g. there may be values displayed on the client's screen that are computed in the backend 
based on the real-time market data, and stream only the market data will cause out-of-sync behaviour); although there are solutions
around it, they seemed too much of an effort at the current stage where we want to see a working soluiton, and so we decided not to
use websockets for now. Instead, we will be polling every few seconds from the client
- as for MySQL, we decided to switch to PostgreSQL, as it seemed to follow the SQL standards better and also have useful data types 
such as arrays; but we still did not get to design nor setup the database together because we both have been busy
- everyone got too busy for a meeting so I spent some time and tried to delegate tasks to each member, and they accepted the tasks
- tried to break down user stories to subtasks so that we can work in parallel better and also keep track of our progress better
- looked into different approximate search algorithms for searching for instruments, and found two useful libraries that we could use,
one based on Bitap and another based on cosine similarity
- most of the time this week was spent experimenting and researching on websockets, and not much on actual contribution to the codebase,
so I plan to make up for this next week
- plan for next week: setup interval-based polling on React, implement search functionality, help Even with database setup, grabbing data
from twelvedata in the backend
 
